{"version":3,"sources":["constant.js","Components/NavBar/NavBar.jsx","Components/Row1/Row1.jsx","Components/SideBar/Sidebar.jsx","Components/Row2/Row2.jsx","Components/Input/InputComp.jsx","App.js","index.js"],"names":["contractAddress","contractabi","tokenAddress","tokenabi","NavBar","accountAd","useState","account","setAccount","loadWeb3","a","isConnected","window","ethereum","web3","Web3","enable","currentProvider","console","log","eth","Contract","getAccounts","accounts","on","getUpdateAccount","getChainId","loadData","contract","methods","balanceOf","call","accountDetails","useEffect","setInterval","className","class","Row1","stakedmoney","setStakedMoney","walletmoney","setWalletMoney","totalbnbDistributed","setTotalBnbDsitributed","stakeValue","weiAmount2","utils","fromWei","totalDistributions","Sidebar","href","Row2","totalmoneystakers","setTotalMoneySTakers","totalMoneyStaked","setTotalMoneySTaked","totalSupply","setTotalSupply","totalStaked","totalStakers","InputComp","numberofTokens","setNumberofTokens","rewards","setRewards","dividendsOf","stake","send","from","unstake","withdraw","onClick","type","name","id","onChange","e","target","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5b87481.chunk.js","sourcesContent":["\r\nexport const contractAddress = \"0x61f33879f0f9b1A48FD41dF0A3D8665659FCe93C\";\r\nexport const contractabi =\r\n\r\n    [{ \"inputs\": [{ \"internalType\": \"contract IERC20\", \"name\": \"_token\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amountSent\", \"type\": \"uint256\" }], \"name\": \"OnDistribute\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"OnReinvest\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"OnStake\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"OnUnstake\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"OnWithdraw\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"previousOwner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"OwnershipTransferred\", \"type\": \"event\" }, { \"constant\": false, \"inputs\": [], \"name\": \"distribute\", \"outputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"staker\", \"type\": \"address\" }], \"name\": \"dividendsOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"profitPerShare\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"renounceOwnership\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_startTime\", \"type\": \"uint256\" }], \"name\": \"setStartTime\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"stake\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"stakeValue\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"_blockNumber\", \"type\": \"uint256\" }], \"name\": \"stakeValueAt\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"stakerPayouts\", \"outputs\": [{ \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"startTime\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalDistributions\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalStaked\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_blockNumber\", \"type\": \"uint256\" }], \"name\": \"totalStakedAt\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalStakers\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"transferOwnership\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"unstake\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"withdraw\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }]\r\n\r\nexport const tokenAddress = \"0xd1d7e71869034d19716b3eed3017014ac0928154\";\r\nexport const tokenabi =\r\n\r\n    [{ \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"previousOwner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"OwnershipTransferred\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"ethAmount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"tokenAmount\", \"type\": \"uint256\" }], \"name\": \"SwapedTokenForEth\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"subtractedValue\", \"type\": \"uint256\" }], \"name\": \"decreaseAllowance\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"addedValue\", \"type\": \"uint256\" }], \"name\": \"increaseAllowance\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isSwapEnabled\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isTaxActive\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"isTaxless\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"minTokenBeforeSwap\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"renounceOwnership\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"setMinTokenBeforeSwap\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"pair\", \"type\": \"address\" }], \"name\": \"setPairAddress\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_stakingPool\", \"type\": \"address\" }], \"name\": \"setStakingPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"bool\", \"name\": \"_value\", \"type\": \"bool\" }], \"name\": \"setSwapEnabled\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"bool\", \"name\": \"_value\", \"type\": \"bool\" }], \"name\": \"setTaxActive\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_taxFee\", \"type\": \"uint256\" }], \"name\": \"setTaxFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"_value\", \"type\": \"bool\" }], \"name\": \"setTaxless\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stakingPool\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"taxFee\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"taxFeeTotal\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalEthDistributed\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"transferOwnership\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"uniswapV2Pair\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"uniswapV2Router\", \"outputs\": [{ \"internalType\": \"contract IUniswapV2Router02\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"stateMutability\": \"payable\", \"type\": \"receive\" }]\r\n","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport './navbar.css'\r\nimport Web3 from \"web3\";\r\nimport {\r\n  contractAddress,\r\n  contractabi\r\n} from \"../../constant\";\r\n\r\nfunction NavBar() {\r\n  \r\n    let interv = null;\r\n    let accountAd;\r\n    const [account, setAccount] = useState(\"Connect To Wallet\");\r\n    const [network, setNetwork] = useState(null);\r\n    const [enterlottery, setlottery] = useState();\r\n    const [players, setPlayers] = useState(0);\r\n    const [balance, setBalance] = useState(0);\r\n  \r\n    const loadWeb3 = async () => {\r\n      let isConnected = false;\r\n      try {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum);\r\n          await window.ethereum.enable();\r\n  \r\n          isConnected = true;\r\n        } else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider);\r\n          isConnected = true;\r\n        } else {\r\n          isConnected = false;\r\n          console.log(\"error\", \r\n          \"Metamask is not installed, please install it on your browser to connect.\");\r\n        }\r\n        if (isConnected === true) {\r\n          const web3 = window.web3;\r\n          let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n          let accounts = await getAccounts();\r\n          setAccount(accounts[0]);\r\n          accountAd = accounts[0];\r\n          let accountDetails = null;\r\n          window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n          \r\n            setAccount(accounts[0]);\r\n            accountAd = accounts[0];\r\n                      getUpdateAccount(accounts);\r\n            console.log(accounts);\r\n          });\r\n        }\r\n        console.log(\"web3.eth\", await window.web3.eth.getChainId());\r\n        // setNetworkType(await window.web3.eth.getChainId());\r\n        loadData();\r\n      } catch (error) {\r\n        console.log(\"error\",\"Error while connecting metamask\");\r\n      }\r\n    };\r\n  \r\n   \r\n  \r\n    const getUpdateAccount = async (accounts) => {\r\n      const web3 = window.web3;\r\n      let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n    };\r\n  \r\n    const getAccounts = async () => {\r\n      const web3 = window.web3;\r\n      try {\r\n        let accounts = await web3.eth.getAccounts();\r\n        console.log(accounts);\r\n        return accounts;\r\n      } catch (error) {\r\n        console.log(\"Error while fetching acounts: \", error);\r\n        return null;\r\n      }\r\n    };\r\n    \r\n    const isLockedAccount = async () => {\r\n      try {\r\n        let accounts = await getAccounts();\r\n        if (accounts.length > 0) {\r\n          console.log(\"Metamask is unlocked\");\r\n        } else {\r\n          console.log(\"Metamask is locked\");\r\n        }\r\n      } catch (error) {\r\n        alert(\"Error while checking locked account\");\r\n      }\r\n    };\r\n  \r\n\r\n    const loadData = async () => {\r\n      try {\r\n        console.log(\"accountDetails\", accountAd);\r\n  \r\n        const web3 = window.web3;\r\n        let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n        let accountDetails = await contract.methods.balanceOf(accountAd).call();\r\n        console.log(\"accountDetails\", accountDetails);\r\n      // accountDetails);  setbalance(\r\n      } catch (e) {\r\n        console.log(\"error\", e);\r\n      }\r\n    };\r\n    useEffect(() => {\r\n        loadWeb3();\r\n        setInterval(() => {\r\n          if (account) {\r\n            loadWeb3();\r\n          } else {\r\n            loadWeb3();\r\n          }\r\n        }, 1000);\r\n      }, []);\r\n    \r\n    return (\r\n        <>\r\n           <div className=\"Navbar_Main\">\r\n            <h1>Stake NIRON</h1>\r\n            <div class=\"wallet-wrap\">\r\n              <span className=\" wallet0\">Wallet: </span>\r\n              <span className=\"wallet text-truncate\">{account}</span>\r\n            </div>\r\n           </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport './row1.css'\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport {\r\n  contractAddress,\r\n  contractabi,\r\n  tokenAddress,\r\n  tokenabi\r\n} from \"../../constant\";\r\nfunction Row1() {\r\n\r\n  let interv = null;\r\n  let accountAd;\r\n  const [account, setAccount] = useState(\"Connect To Wallet\");\r\n  const [network, setNetwork] = useState(null);\r\n  const [enterlottery, setlottery] = useState();\r\n  const [players, setPlayers] = useState(0);\r\n\r\n  const [stakedmoney, setStakedMoney] = useState(0);\r\n  const [walletmoney, setWalletMoney] = useState(0);\r\n  const [totalbnbDistributed, setTotalBnbDsitributed] = useState(0);\r\n\r\n\r\n  const loadWeb3 = async () => {\r\n    let isConnected = false;\r\n    try {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        await window.ethereum.enable();\r\n\r\n        isConnected = true;\r\n      } else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        isConnected = true;\r\n      } else {\r\n        isConnected = false;\r\n        console.log(\"error\",\r\n          \"Metamask is not installed, please install it on your browser to connect.\");\r\n      }\r\n      if (isConnected === true) {\r\n        const web3 = window.web3;\r\n        let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n        let accounts = await getAccounts();\r\n        setAccount(accounts[0]);\r\n        accountAd = accounts[0];\r\n        let accountDetails = null;\r\n        window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n\r\n          setAccount(accounts[0]);\r\n          accountAd = accounts[0];\r\n          getUpdateAccount(accounts);\r\n          console.log(accounts);\r\n        });\r\n      }\r\n      console.log(\"web3.eth\", await window.web3.eth.getChainId());\r\n      // setNetworkType(await window.web3.eth.getChainId());\r\n      loadData();\r\n    } catch (error) {\r\n      console.log(\"error\", \"Error while connecting metamask\");\r\n    }\r\n  };\r\n\r\n  const setNetworkType = async (netId) => {\r\n    console.log(\"id\", netId);\r\n    switch (netId) {\r\n      case 1:\r\n        console.log(\"This is mainnet\");\r\n        // Accounttype = \"1\";\r\n        setNetwork(\" Mainnet\");\r\n        break;\r\n      case 2:\r\n        console.log(\"This is the deprecated Morden test network.\");\r\n        // network =\"deprecated\"\r\n        setNetwork(\" Deprecated\");\r\n        break;\r\n      case 3:\r\n        console.log(\"This is the ropsten test network.\");\r\n        // network = \"ropsten\";\r\n        setNetwork(\"Ropsten\");\r\n        break;\r\n      case 4:\r\n        console.log(\"This is the Rinkeby test network.\");\r\n        // network = \"Rinkeby\";\r\n        setNetwork(\"Rinkeby\");\r\n        break;\r\n      case 42:\r\n        console.log(\"This is the Kovan test network.\");\r\n        // network = \"Kovan\";\r\n        setNetwork(\" Kovan\");\r\n      case 97:\r\n        console.log(\"Binance test network.\");\r\n        // network = \"Kovan\";\r\n        setNetwork(\" Kovan\");\r\n      case 56:\r\n        console.log(\"Binance Main network.\");\r\n        // network = \"Kovan\";\r\n        setNetwork(\" Kovan\");\r\n        break;\r\n      default:\r\n        console.log(\"This is an unknown network.\");\r\n        // network = \"Detecting...\";\r\n        setNetwork(\" Detecting...\");\r\n\r\n    }\r\n    console.log(\"network\", { network });\r\n  }\r\n\r\n  const getUpdateAccount = async (accounts) => {\r\n    const web3 = window.web3;\r\n    let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n  };\r\n\r\n  const getAccounts = async () => {\r\n    const web3 = window.web3;\r\n    try {\r\n      let accounts = await web3.eth.getAccounts();\r\n      console.log(accounts);\r\n      return accounts;\r\n    } catch (error) {\r\n      console.log(\"Error while fetching acounts: \", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const isLockedAccount = async () => {\r\n    try {\r\n      let accounts = await getAccounts();\r\n      if (accounts.length > 0) {\r\n        console.log(\"Metamask is unlocked\");\r\n      } else {\r\n        console.log(\"Metamask is locked\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error while checking locked account\");\r\n    }\r\n  };\r\n\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      console.log(\"accountDetails\", accountAd);\r\n\r\n      const web3 = window.web3;\r\n      let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n      let accountDetails = await contract.methods.stakeValue(accountAd).call();\r\n      console.log(\"stakeValue\", accountDetails);\r\n      var weiAmount2 = web3.utils.fromWei(accountDetails);\r\n      setStakedMoney(weiAmount2);\r\n\r\n      accountDetails = await contract.methods.totalDistributions().call();\r\n      console.log(\"totalDistributions\", accountDetails);\r\n      var weiAmount2 = web3.utils.fromWei(accountDetails);\r\n      setTotalBnbDsitributed(weiAmount2);\r\n\r\n      \r\n     contract = new web3.eth.Contract(tokenabi, tokenAddress);\r\n      accountDetails = await contract.methods.balanceOf(accountAd).call();\r\n      console.log(\"balanceOf\", accountDetails);\r\n      var weiAmount2 = web3.utils.fromWei(accountDetails);\r\n      setWalletMoney(weiAmount2);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadWeb3();\r\n    setInterval(() => {\r\n      if (account) {\r\n        loadWeb3();\r\n      } else {\r\n        loadWeb3();\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Row1_Main\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12 pb-3 col-sm-6 col-md-4\">\r\n              <div className=\"Row1_innerDiv\">\r\n                <h4>Staked</h4>\r\n                <h6>{stakedmoney}</h6>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 pb-3 col-sm-6 col-md-4\">\r\n              <div className=\"Row1_innerDiv\">\r\n                <h4>Wallet</h4>\r\n                <h6>{walletmoney}</h6>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 pb-3 col-sm-6 col-md-4\">\r\n              <div className=\"Row1_innerDiv\">\r\n                <h4>Total Distributed</h4>\r\n                <h6>{totalbnbDistributed}</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row1\r\n","import \"./sidebar.css\"\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <>\r\n            <div className=\"sidebar_Main\">\r\n                <h3><span className=\"piggy\"> NIRON </span>FINANCE</h3>\r\n               <div className=\"sidebar_inner\">\r\n               <a href=\"http://\">  <i class=\"fas fa-home\"></i>\r\n                    <p>Stake NIRON</p></a> \r\n                </div>\r\n                <div className=\"sidebar_last_div\">\r\n                    <hr className=\"hrColor\" />\r\n                    <div className=\"lastDiv_1\">\r\n                        <a href=\"https://t.me/NironOfficial\"><i class=\"fab fa-telegram-plane\"></i>\r\n                            <p>Telegram</p></a>\r\n                    </div>\r\n                    <div className=\"lastDiv_1\">\r\n                    <a href=\"http://niron.finance/\"> <i class=\"fab fa-twitter\"></i>\r\n                        <p>Website</p></a>\r\n                    </div>\r\n                    <hr className=\"hrColor\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n{/* <i class=\"fab fa-twitter\"></i> */ }\r\n{/* <i class=\"fab fa-telegram-plane\"></i> */ }","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport './row2.css'\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport {\r\n    contractAddress,\r\n    contractabi, tokenabi, tokenAddress\r\n  } from \"../../constant\";\r\n  \r\nfunction Row2() {\r\n\r\n    let interv = null;\r\n    let accountAd;\r\n    const [account, setAccount] = useState(\"Connect To Wallet\");\r\n    const [network, setNetwork] = useState(null);\r\n    const [enterlottery, setlottery] = useState();\r\n    const [players, setPlayers] = useState(0);\r\n\r\n    \r\n    const [totalmoneystakers, setTotalMoneySTakers] = useState(0);\r\n    const [totalMoneyStaked, setTotalMoneySTaked] = useState(0);\r\n    const [totalSupply, setTotalSupply] = useState(0);\r\n    /*\r\n    \r\n    const [players, setPlayers] = useState(0);\r\n    \r\n    const [players, setPlayers] = useState(0);\r\n    */\r\n  \r\n    const loadWeb3 = async () => {\r\n      let isConnected = false;\r\n      try {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum);\r\n          await window.ethereum.enable();\r\n  \r\n          isConnected = true;\r\n        } else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider);\r\n          isConnected = true;\r\n        } else {\r\n          isConnected = false;\r\n          console.log(\"error\", \r\n          \"Metamask is not installed, please install it on your browser to connect.\");\r\n        }\r\n        if (isConnected === true) {\r\n          const web3 = window.web3;\r\n          let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n          let accounts = await getAccounts();\r\n          setAccount(accounts[0]);\r\n          accountAd = accounts[0];\r\n          let accountDetails = null;\r\n          window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n          \r\n            setAccount(accounts[0]);\r\n            accountAd = accounts[0];\r\n                      getUpdateAccount(accounts);\r\n            console.log(accounts);\r\n          });\r\n        }\r\n        console.log(\"web3.eth\", await window.web3.eth.getChainId());\r\n        // setNetworkType(await window.web3.eth.getChainId());\r\n        loadData();\r\n      } catch (error) {\r\n        console.log(\"error\",\"Error while connecting metamask\");\r\n      }\r\n    };\r\n  \r\n    const setNetworkType = async (netId) => {\r\n      console.log(\"id\", netId);\r\n      switch (netId) {\r\n        case 1:\r\n          console.log(\"This is mainnet\");\r\n          // Accounttype = \"1\";\r\n          setNetwork(\" Mainnet\");\r\n          break;\r\n        case 2:\r\n          console.log(\"This is the deprecated Morden test network.\");\r\n          // network =\"deprecated\"\r\n          setNetwork(\" Deprecated\");\r\n          break;\r\n        case 3:\r\n          console.log(\"This is the ropsten test network.\");\r\n          // network = \"ropsten\";\r\n          setNetwork(\"Ropsten\");\r\n          break;\r\n        case 4:\r\n          console.log(\"This is the Rinkeby test network.\");\r\n          // network = \"Rinkeby\";\r\n          setNetwork(\"Rinkeby\");\r\n          break;\r\n        case 42:\r\n          console.log(\"This is the Kovan test network.\");\r\n          // network = \"Kovan\";\r\n          setNetwork(\" Kovan\");\r\n          case 97:\r\n          console.log(\"Binance test network.\");\r\n          // network = \"Kovan\";\r\n          setNetwork(\" Kovan\");\r\n          case 56:\r\n          console.log(\"Binance Main network.\");\r\n          // network = \"Kovan\";\r\n          setNetwork(\" Kovan\");\r\n          break;\r\n        default:\r\n          console.log(\"This is an unknown network.\");\r\n          // network = \"Detecting...\";\r\n          setNetwork(\" Detecting...\");\r\n  \r\n      }\r\n      console.log(\"network\", { network });\r\n    }\r\n  \r\n    const getUpdateAccount = async (accounts) => {\r\n      const web3 = window.web3;\r\n      let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n    };\r\n  \r\n    const getAccounts = async () => {\r\n      const web3 = window.web3;\r\n      try {\r\n        let accounts = await web3.eth.getAccounts();\r\n        console.log(accounts);\r\n        return accounts;\r\n      } catch (error) {\r\n        console.log(\"Error while fetching acounts: \", error);\r\n        return null;\r\n      }\r\n    };\r\n    \r\n    const isLockedAccount = async () => {\r\n      try {\r\n        let accounts = await getAccounts();\r\n        if (accounts.length > 0) {\r\n          console.log(\"Metamask is unlocked\");\r\n        } else {\r\n          console.log(\"Metamask is locked\");\r\n        }\r\n      } catch (error) {\r\n        alert(\"Error while checking locked account\");\r\n      }\r\n    };\r\n  \r\n    const loadData = async () => {\r\n      try {\r\n        console.log(\"accountDetails\", accountAd);\r\n  \r\n        const web3 = window.web3;\r\n        let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n        let accountDetails = await contract.methods.totalStaked().call();\r\n        console.log(\"accountDetails\", accountDetails);\r\n        var weiAmount2 = web3.utils.fromWei(accountDetails);\r\n        setTotalMoneySTaked(weiAmount2);\r\n  \r\n        accountDetails = await contract.methods.totalStakers().call();\r\n        console.log(\"accountDetails\", accountDetails);\r\n        setTotalMoneySTakers(accountDetails);\r\n\r\n        contract = new web3.eth.Contract(tokenabi, tokenAddress);\r\n        accountDetails = await contract.methods.totalSupply().call();\r\n        console.log(\"totalSupply\", accountDetails);\r\n        var weiAmount2 = web3.utils.fromWei(accountDetails);\r\n        setTotalSupply(weiAmount2);\r\n      } catch (e) {\r\n        console.log(\"error\", e);\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadWeb3();\r\n        setInterval(() => {\r\n          if (account) {\r\n            loadWeb3();\r\n          } else {\r\n            loadWeb3();\r\n          }\r\n        }, 1000);\r\n      }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Row2_Main\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 pb-3 col-sm-6 col-md-4\">\r\n                            <div className=\"Row2_innerDiv\">\r\n                                <h4>Total Stakers</h4>\r\n                                <h6>{totalmoneystakers}</h6>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 pb-3 col-sm-6 col-md-4\">\r\n                            <div className=\"Row2_innerDiv\">\r\n                                <h4>Total Staked</h4>\r\n                                <h6>{totalMoneyStaked}</h6>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 pb-3 col-sm-6 col-md-4\">\r\n                            <div className=\"Row2_innerDiv\">\r\n                                <h4> Total Supply</h4>\r\n                                <h6>{totalSupply}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                {/* <div className=\"Row2_innerDiv\">\r\n                    <h3>$ Staked</h3>\r\n                    <h2>0</h2>\r\n                </div>\r\n                <div className=\"Row2_innerDiv\">\r\n                    <h3>$ Staked</h3>\r\n                    <h2>0</h2>\r\n                </div>\r\n                <div className=\"Row2_innerDiv\">\r\n                    <h3>$ Staked</h3>\r\n                    <h2>0</h2>\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Row2\r\n","import './input.css'\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport {\r\n  contractAddress,\r\n  contractabi, tokenAddress, tokenabi\r\n} from \"../../constant\";\r\n\r\nfunction InputComp() {\r\n\r\n  let interv = null;\r\n  let accountAd;\r\n  const [account, setAccount] = useState(\"Connect To Wallet\");\r\n  const [network, setNetwork] = useState(null);\r\n  const [enterlottery, setlottery] = useState();\r\n  const [value, setValue] = useState(0);\r\n\r\n\r\n  const [numberofTokens, setNumberofTokens] = useState(0);\r\n  const [rewards, setRewards] = useState(0);\r\n  // const [totalSupply, setTotalSupply] = useState(0);\r\n  /*\r\n  const [players, setPlayers] = useState(0);\r\n  const [players, setPlayers] = useState(0);\r\n  */\r\n\r\n  const loadWeb3 = async () => {\r\n    let isConnected = false;\r\n    try {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        await window.ethereum.enable();\r\n\r\n        isConnected = true;\r\n      } else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        isConnected = true;\r\n      } else {\r\n        isConnected = false;\r\n        console.log(\"error\",\r\n          \"Metamask is not installed, please install it on your browser to connect.\");\r\n      }\r\n      if (isConnected === true) {\r\n        const web3 = window.web3;\r\n        let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n        let accounts = await getAccounts();\r\n        setAccount(accounts[0]);\r\n        accountAd = accounts[0];\r\n        let accountDetails = null;\r\n        window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n\r\n          setAccount(accounts[0]);\r\n          accountAd = accounts[0];\r\n          getUpdateAccount(accounts);\r\n          console.log(accounts);\r\n        });\r\n      }\r\n      console.log(\"web3.eth\", await window.web3.eth.getChainId());\r\n      // setNetworkType(await window.web3.eth.getChainId());\r\n      loadData();\r\n    } catch (error) {\r\n      console.log(\"error\", \"Error while connecting metamask\");\r\n    }\r\n  };\r\n\r\n  const setNetworkType = async (netId) => {\r\n    console.log(\"id\", netId);\r\n    switch (netId) {\r\n      case 1:\r\n        console.log(\"This is mainnet\");\r\n        // Accounttype = \"1\";\r\n        setNetwork(\" Mainnet\");\r\n        break;\r\n      case 2:\r\n        console.log(\"This is the deprecated Morden test network.\");\r\n        // network =\"deprecated\"\r\n        setNetwork(\" Deprecated\");\r\n        break;\r\n      case 3:\r\n        console.log(\"This is the ropsten test network.\");\r\n        // network = \"ropsten\";\r\n        setNetwork(\"Ropsten\");\r\n        break;\r\n      case 4:\r\n        console.log(\"This is the Rinkeby test network.\");\r\n        // network = \"Rinkeby\";\r\n        setNetwork(\"Rinkeby\");\r\n        break;\r\n      case 42:\r\n        console.log(\"This is the Kovan test network.\");\r\n        // network = \"Kovan\";\r\n        setNetwork(\" Kovan\");\r\n      case 97:\r\n        console.log(\"Binance test network.\");\r\n        // network = \"Kovan\";\r\n        setNetwork(\" Kovan\");\r\n      case 56:\r\n        console.log(\"Binance Main network.\");\r\n        // network = \"Kovan\";\r\n        setNetwork(\" Kovan\");\r\n        break;\r\n      default:\r\n        console.log(\"This is an unknown network.\");\r\n        // network = \"Detecting...\";\r\n        setNetwork(\" Detecting...\");\r\n\r\n    }\r\n    console.log(\"network\", { network });\r\n  }\r\n\r\n  const getUpdateAccount = async (accounts) => {\r\n    const web3 = window.web3;\r\n    let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n  };\r\n\r\n  const getAccounts = async () => {\r\n    const web3 = window.web3;\r\n    try {\r\n      let accounts = await web3.eth.getAccounts();\r\n      console.log(accounts);\r\n      return accounts;\r\n    } catch (error) {\r\n      console.log(\"Error while fetching acounts: \", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const isLockedAccount = async () => {\r\n    try {\r\n      let accounts = await getAccounts();\r\n      if (accounts.length > 0) {\r\n        console.log(\"Metamask is unlocked\");\r\n      } else {\r\n        console.log(\"Metamask is locked\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error while checking locked account\");\r\n    }\r\n  };\r\n\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      console.log(\"accountDetails\", accountAd);\r\n\r\n      const web3 = window.web3;\r\n      let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n      let accountDetails = await contract.methods.dividendsOf(accountAd).call();\r\n      console.log(\"stakeValue\", accountDetails);\r\n      setRewards(accountDetails);\r\n\r\n      accountDetails = await contract.methods.totalDistributions().call();\r\n      console.log(\"totalDistributions\", accountDetails);\r\n      // setTotalBnbDsitributed(accountDetails);\r\n\r\n\r\n      contract = new web3.eth.Contract(tokenabi, tokenAddress);\r\n      accountDetails = await contract.methods.balanceOf(accountAd).call();\r\n      console.log(\"balanceOf\", accountDetails);\r\n      // setWalletMoney(accountDetails);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n\r\n  const stake = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n      let accountDetails = await contract.methods.stake(\r\n        numberofTokens\r\n      )\r\n        .send({\r\n          from: account\r\n        });\r\n      console.log(\"accountDetails\", accountDetails);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  const unstake = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n      let accountDetails = await contract.methods.unstake(\r\n        numberofTokens\r\n      )\r\n        .send({\r\n          from: account\r\n        });\r\n      console.log(\"accountDetails\", accountDetails);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n  const withdraw = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let contract = new web3.eth.Contract(contractabi, contractAddress);\r\n      let accountDetails = await contract.methods.withdraw(\r\n        numberofTokens\r\n      )\r\n        .send({\r\n          from: account\r\n        });\r\n      console.log(\"accountDetails\", accountDetails);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadWeb3();\r\n    setInterval(() => {\r\n      if (account) {\r\n        loadWeb3();\r\n      } else {\r\n        loadWeb3();\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Row1_Main\">\r\n        <div class=\" container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12 mt-5 pb-3\">\r\n              <div className=\"inputComp_Main_container\">\r\n                <div className=\"inputComp_Main\">\r\n                  <div className=\"withdraw_Class\">\r\n                    <h5>Rewards: <span>{rewards}</span> ETH</h5>\r\n                    <button className=\"btn \" onClick={withdraw}>Withdraw</button>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"inpo_Main\">\r\n                    {/* <div className=\"upperBtnPair\">\r\n                      <button className=\"btn btn-success\" onClick={stake}>STAKE</button>\r\n                      <button className=\"btn btn-success\" onClick={unstake}>UNSTAKE</button>\r\n                    </div> */}\r\n                    <div className=\"input_div\">\r\n                      <input className=\"w-100\" type=\"text\" name=\"\" id=\"\" onChange={(e) => { setNumberofTokens(e.target.value) }} />\r\n                    </div>\r\n                    <div className=\"upperBtnPair\">\r\n                      <button className=\"btn btnclor\" onClick={stake}>STAKE</button>\r\n                      <button className=\"btn btnclor\" onClick={unstake}>UNSTAKE</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputComp\r\n","import React from 'react'\r\nimport NavBar from './Components/NavBar/NavBar'\r\nimport Row1 from './Components/Row1/Row1'\r\nimport Sidebar from './Components/SideBar/Sidebar'\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Row2 from './Components/Row2/Row2'\r\nimport './app.css'\r\nimport InputComp from './Components/Input/InputComp'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div class=\"container-fluid fullWidth p-0 m-0\">\r\n        <div class=\"row p-0 m-0\">\r\n          <div class=\"col-0 sidebar p-0 m-0 col-md-2\">\r\n            <Sidebar />\r\n          </div>\r\n          <div class=\"col-12 bodyy col-md-10\">\r\n            <NavBar />\r\n            <Row1 />\r\n            <Row2 />\r\n            <InputComp />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"appMain\">\r\n        <div className=\"appInner1\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"appInner1\">\r\n        <div className=\"appInner1_1\">\r\n          <NavBar />\r\n          <Row1 />\r\n          <Row2 />\r\n          <InputComp />\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n\r\n      {/* <NavBar/>\r\n    <Row1/>\r\n    <Row2/>\r\n    <InputComp/> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}